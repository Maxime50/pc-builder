{"version":3,"sources":["Components/NavBar.js","Pages/Accueil.js","Components/Products.js","Components/Category.js","utils/data.js","Pages/Boutique.js","Pages/Panier.js","reducers/cart.js","App.js","index.js"],"names":["NavBar","as","padding","fontSize","spacing","justify","to","Accueil","minH","mt","textAlign","Products","products","useContext","CartContext","cart","dispatch","toast","useToast","w","mx","divider","borderColor","map","product","size","title","onClick","payload","includes","status","duration","type","icon","Add","colorScheme","infos","info","Category","useState","isOpen","setIsOpen","bg","aria-label","ChevronDown","h","transition","transform","in","animateOpacity","data","CPU","GPU","Motherboards","rams","Boutique","maxW","mb","Object","keys","category","Panier","cartItem","alignItems","Delete","length","alert","JSON","stringify","cartReducer","action","filter","initialState","React","createContext","App","useReducer","Provider","value","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.537af5e7.chunk.js","sourcesContent":["import { Box, HStack } from '@chakra-ui/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Box as=\"nav\" padding=\"3\">\r\n      <HStack fontSize=\"2xl\" spacing=\"10\" justify=\"center\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/boutique\">Boutique</Link>\r\n        <Link to=\"/panier\">Panier</Link>\r\n      </HStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Container, Heading, Text } from '@chakra-ui/react';\r\n\r\nconst Accueil = () => {\r\n  return (\r\n    <Container fontSize=\"xl\" minH=\"100vh\" mt=\"20\" textAlign=\"center\">\r\n      <Heading as=\"h1\">Accueil</Heading>\r\n      <Text mt=\"5\">\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\r\n        commodo consequat.\r\n      </Text>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Accueil;\r\n","import { AddIcon } from '@chakra-ui/icons';\r\nimport {\r\n  Badge,\r\n  Flex,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Stack,\r\n  StackDivider,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { useContext } from 'react';\r\nimport { CartContext } from '../App';\r\n\r\nconst Products = ({ products }) => {\r\n  const { cart, dispatch } = useContext(CartContext);\r\n  const toast = useToast(); // Alert hook\r\n\r\n  const handleAddToCart = payload => {\r\n    //checks if the provided product is already in the cart\r\n    if (!cart.includes(payload)) {\r\n      dispatch({ type: 'ADD_TO_CART', payload });\r\n      toast({\r\n        title: `${payload.title} a été ajouté`,\r\n        status: 'success',\r\n        duration: 2500,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: `${payload.title} est déjà dans le panier`,\r\n        status: 'error',\r\n        duration: 2500,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      w=\"90%\"\r\n      mx=\"auto\"\r\n      spacing=\"2rem\"\r\n      mt=\"1.5rem\"\r\n      divider={<StackDivider borderColor=\"gray.200\" />}\r\n    >\r\n      {products.map(product => (\r\n        <Stack key={product.title}>\r\n          <Flex justify=\"space-between\">\r\n            <Heading size=\"md\">{product.title}</Heading>\r\n            <IconButton\r\n              onClick={() => handleAddToCart(product)}\r\n              icon={<AddIcon />}\r\n              colorScheme=\"teal\"\r\n              size=\"xs\"\r\n            />\r\n          </Flex>\r\n          <HStack spacing=\"5\">\r\n            {product.infos.map(info => (\r\n              <Badge colorScheme=\"purple\" key={info}>\r\n                {info}\r\n              </Badge>\r\n            ))}\r\n          </HStack>\r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { ChevronDownIcon } from '@chakra-ui/icons';\r\nimport { Collapse, Flex, Heading, IconButton } from '@chakra-ui/react';\r\nimport { useState } from 'react';\r\nimport Products from './Products';\r\n\r\nconst Category = ({ title, products }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleProducts = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <>\r\n      <Flex justify=\"space-between\">\r\n        <Heading>{title}</Heading>\r\n        <IconButton\r\n          onClick={toggleProducts}\r\n          bg=\"transparent\"\r\n          aria-label={`show all ${title}`}\r\n          size=\"lg\"\r\n          icon={\r\n            <ChevronDownIcon\r\n              w=\"6\"\r\n              h=\"6\"\r\n              transition={'all .15s ease-in-out'}\r\n              transform={isOpen ? 'rotate(180deg)' : ''}\r\n            />\r\n          }\r\n        />\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <Products products={products} />\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","const data = {\r\n  CPU: [\r\n    { title: 'CPU 1', infos: ['AMD', '16 cores'] },\r\n    { title: 'CPU 2', infos: ['intel', '32 cores'] },\r\n    { title: 'CPU 3', infos: ['AMD', '64 cores'] },\r\n  ],\r\n  GPU: [\r\n    { title: 'GPU 1', infos: ['NVIDIA', 'GeForce'] },\r\n    { title: 'GPU 2', infos: ['AMD', 'foo', 'fooo'] },\r\n    { title: 'GPU 3', infos: ['NVIDIA', 'GeForce'] },\r\n  ],\r\n  Motherboards: [\r\n    { title: 'motherboard 1', infos: ['Asus'] },\r\n    { title: 'motherboard 2', infos: ['MSI'] },\r\n    { title: 'motherboard 3', infos: ['AMD'] },\r\n  ],\r\n  rams: [\r\n    { title: 'ram 1', infos: ['Corsair', '16 gb'] },\r\n    { title: 'ram 2', infos: ['Corsair', '32 gb'] },\r\n    { title: 'ram 3', infos: ['Corsair', '64 gb'] },\r\n  ],\r\n};\r\n\r\nexport default data;\r\n","import { Container, Heading, Stack, StackDivider } from '@chakra-ui/react';\r\nimport Category from '../Components/Category';\r\nimport data from '../utils/data';\r\n\r\nconst Boutique = () => {\r\n  return (\r\n    <Container fontSize=\"xl\">\r\n      <Heading as=\"h1\" mt=\"20\" textAlign=\"center\">\r\n        PC Builder\r\n      </Heading>\r\n      <Stack\r\n        w=\"full\"\r\n        maxW=\"50rem\"\r\n        mt=\"16\"\r\n        mb=\"20\"\r\n        spacing=\"1.5rem\"\r\n        divider={<StackDivider borderColor=\"gray.200\" />}\r\n      >\r\n        {Object.keys(data).map(category => (\r\n          <Category title={category} products={data[category]} key={category} />\r\n        ))}\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Boutique;\r\n","import { DeleteIcon } from '@chakra-ui/icons';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { useContext } from 'react';\r\nimport { CartContext } from '../App';\r\nconst Panier = () => {\r\n  const { cart, dispatch } = useContext(CartContext);\r\n\r\n  const handleAlert = () => {\r\n    if (cart.length > 0) {\r\n      alert('Votre panier: ' + JSON.stringify(cart));\r\n    } else {\r\n      alert('Votre panier est vide.');\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = payload => {\r\n    dispatch({ type: 'DELETE_FROM_CART', payload });\r\n  };\r\n\r\n  return (\r\n    <Container mt=\"20\" textAlign=\"center\">\r\n      <Heading as=\"h1\">Votre panier:</Heading>\r\n      <Stack mt=\"5\" spacing=\"5\">\r\n        {cart.map(cartItem => (\r\n          <Flex justify=\"space-between\" alignItems=\"center\">\r\n            <Heading as=\"h2\" size=\"md\" key={cartItem.title}>\r\n              {cartItem.title}\r\n            </Heading>\r\n            <IconButton\r\n              onClick={() => handleRemoveFromCart(cartItem)}\r\n              icon={<DeleteIcon />}\r\n              size=\"sm\"\r\n              colorScheme=\"red\"\r\n            />\r\n          </Flex>\r\n        ))}\r\n      </Stack>\r\n      <Button type=\"submit\" colorScheme=\"teal\" mt=\"10\" onClick={handleAlert}>\r\n        Alert le contenu\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Panier;\r\n","const cartReducer = (cart, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      return [...cart, action.payload];\r\n    case 'DELETE_FROM_CART':\r\n      return cart.filter(cartItem => cartItem !== action.payload);\r\n    default:\r\n      return cart;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { ChakraProvider } from '@chakra-ui/react';\nimport React, { useReducer } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './Components/NavBar';\nimport Accueil from './Pages/Accueil';\nimport Boutique from './Pages/Boutique';\nimport Panier from './Pages/Panier';\nimport cartReducer from './reducers/cart';\n\nconst initialState = [];\n\nexport const CartContext = React.createContext();\n\nfunction App() {\n  const [cart, dispatch] = useReducer(cartReducer, initialState);\n  return (\n    <ChakraProvider>\n      <CartContext.Provider value={{ cart, dispatch }}>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={Accueil} />\n            <Route path=\"/boutique\" component={Boutique} />\n            <Route path=\"/panier\" component={Panier} />\n          </Switch>\n        </Router>\n      </CartContext.Provider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}